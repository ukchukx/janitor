apiVersion: apps/v1
kind: Deployment
metadata:
  name: janitor
  namespace: janitor
  labels:
    app: janitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: janitor
  template:
    metadata:
      labels:
        app: janitor
    spec:
      imagePullSecrets:
      - name: headless-commerce-package-access-token
      # volumes:
      # - name: janitor-data
      #   hostPath:
      #     path: /var/microk8s/data/janitor/data
      #     type: DirectoryOrCreate
      containers:
      - name: janitor
        image: ghcr.io/headless-commerce/janitor
        imagePullPolicy: Always
        ports:
        - containerPort: 4000
        # volumeMounts:
        # - name: janitor-data
        #   mountPath: /app/priv/db/janitor.db
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /health/live
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 30
        env:
        - name: JANITOR_DNS_HOST
          value: 'janitor.moview.com.ng'
        - name: JANITOR_PORT
          value: '4000'
        - name: JANITOR_BUCKET_ID
          valueFrom:
            secretKeyRef:
              name: janitor-secrets
              key: bucketId
        - name: JANITOR_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: janitor-secrets
              key: bucketName
        - name: JANITOR_BUCKET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: janitor-secrets
              key: bucketAccessKey
        - name: JANITOR_BUCKET_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: janitor-secrets
              key: bucketAccessKeyId
        - name: JANITOR_SUPERUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: janitor-secrets
              key: superuserPassword
        - name: JANITOR_SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: janitor-secrets
              key: secretKeyBase
---
kind: Service
apiVersion: v1
metadata:
  name: janitor
  namespace: janitor
spec:
  ports:
  - name: web
    port: 80
    targetPort: 4000
  selector:
    app: janitor
---

apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: janitor-web
  namespace: janitor
spec:
  entryPoints:
    - web
  routes:
  - kind: Rule
    match: Host(`janitor.moview.com.ng`)
    services:
    - name: janitor
      port: 80
    middlewares:
    - name: security
      namespace: default
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: janitor-web-tls
  namespace: janitor
spec:
  entryPoints:
    - websecure
  routes:
  - kind: Rule
    match: Host(`janitor.moview.com.ng`)
    services:
    - name: janitor
      port: 80
    middlewares:
    - name: security
      namespace: default
  tls:
    certResolver: le
    domains:
    - main: "moview.com.ng"
      sans:
      - "*.moview.com.ng"
    options:
      name: mytlsoption
      namespace: default